@page "/Tags/{tagName}"
@page "/Tags"
@using BlazorStaticWebsite.Components.Blog
@using BlazorStatic
@using BlazorStatic.Services
@inject BlogService<FrontMatter> BlogService

@if (TagName == null)
{
    <div class="flex flex-wrap gap-1 justify-between">
        @foreach (var tag in BlogService.BlogPosts.SelectMany(x => x.FrontMatter.Tags).Distinct().Order())
        {
            <a class="text-primary-500 hover:text-primary-400 mr-3 text-sm font-medium uppercase" href="tag/@tag">@tag</a>
        }
    </div>
    return;
}


<div class="divide-y divide-gray-700">
    <div class="space-y-2 pb-8 pt-6 md:space-y-5">
        <h1 class="font-sans md:leading-14 text-3xl font-extrabold leading-9 tracking-tight text-gray-100 sm:text-4xl sm:leading-10 md:text-6xl">@TagName</h1>
        <p class="text-lg leading-7 text-gray-400">Blog posts tagged by 
            <span class="text-primary-300">@TagName</span> 
            </p>
    </div>
<PostsList Posts="posts"/>
</div>

@code {
    
    [Parameter] public string? TagName { get; set; }
    
    List<Post<FrontMatter>>? posts;
    
    protected override void OnInitialized()
    {
        if (string.IsNullOrWhiteSpace(TagName)) return;
        posts =  BlogService.BlogPosts.Where(x => x.FrontMatter.Tags.Contains(TagName)).ToList();
    }
    
}